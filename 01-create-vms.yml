- hosts: localhost
  collections:
    - azure.azcollection
  tasks:

    - name: Prepare VM metadata
      prep_hosts:
        count: "{{ count }}"
      register: vm_data

    - name: Add vm data to virtual hosts
      add_host:
        name: "{{ item.vm }}"
        groups: "setup"
        vm_name: "{{ item.vm }}"
        account_email: "{{ item.email }}"
        account_password: "{{ item.pw }}"
        ansible_connection: local
      with_items: "{{ vm_data.instances }}"

    - name: Create Azure resource group
      azure_rm_resourcegroup:
        name: "{{ azure_rg }}"
        location: "{{ azure_location }}"

- hosts: setup
  collections:
    - azure.azcollection
  tasks:
    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ azure_rg }}"
        name: '{{ vm_name }}-vnet'
        address_prefixes: ["10.0.0.0/16", "ace:cab:deca::/48"]

    - name: Add subnet
      azure_rm_subnet:
        resource_group: "{{ azure_rg }}"
        name: '{{ vm_name }}-snet'
        address_prefixes: ["10.0.1.0/24", "ace:cab:deca::/64"]
        virtual_network: '{{ vm_name }}-vnet'

    - name: Create public IP address (IPv4)
      azure_rm_publicipaddress:
        resource_group: "{{ azure_rg }}"
        allocation_method: Static
        version: ipv4
        sku: Standard
        name: '{{ vm_name }}-ipv4-pip'
      register: output_ipv4_address

    - name: Create public IP address (IPv6)
      azure_rm_publicipaddress:
        resource_group: "{{ azure_rg }}"
        allocation_method: Static
        version: ipv6
        sku: Standard
        name: '{{ vm_name }}-ipv6-pip'
      register: output_ipv6_address

    - name: Output public IP (IPv4)
      debug:
        msg: "The public IP is {{ output_ipv4_address.state.ip_address }}"
    
    - name: Output public IP (IPv6)
      debug:
        msg: "The public IP is {{ output_ipv6_address.state.ip_address }}"

    - name: Create Network Security Group
      azure_rm_securitygroup:
        resource_group: "{{ azure_rg }}"
        name: '{{ vm_name }}-nsg'
        rules:
          - name: 'allow_rdp'
            protocol: Tcp
            destination_port_range: 3389
            access: Allow
            priority: 1001
            direction: Inbound
          - name: 'allow_nginx_traffic'
            protocol: Tcp
            destination_port_range:
              - 5000
            access: Allow
            priority: 1002
            direction: Inbound
          - name: 'allow_powershell_remoting'
            protocol: Tcp
            destination_port_range:
              - 5985
              - 5986
            access: Allow
            priority: 1003
            direction: Inbound

    - name: Create a network interface
      azure_rm_nic_custom:
        name: '{{ vm_name }}-nic'
        resource_group: "{{ azure_rg }}"
        virtual_network: '{{ vm_name }}-vnet'
        subnet_name: '{{ vm_name }}-snet'
        security_group: '{{ vm_name }}-nsg'
        ip_configurations:
          - name: default
            public_ip_address_name: '{{ vm_name }}-ipv4-pip'
            primary: True
            version: IPv4
          - name: ipv6
            public_ip_address_name: '{{ vm_name }}-ipv6-pip'
            primary: False
            version: IPv6

    - name: Create VM
      azure_rm_virtualmachine:
        resource_group: "{{ azure_rg }}"
        name: '{{ vm_name }}'
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: "{{ vm_password }}"
        network_interfaces: '{{ vm_name }}-nic'
        managed_disk_type: Standard_LRS
        os_type: Windows
        image:
          offer: Windows-10
          publisher: MicrosoftWindowsDesktop
          sku: rs5-pro-g2
          version: latest
        allocated: yes

    - name: Create Azure VM extension to enable HTTPS WinRM listener
      azure_rm_virtualmachineextension:
        name: '{{ vm_name }}-wrmext'
        resource_group: "{{ azure_rg }}"
        virtual_machine_name: '{{ vm_name }}'
        publisher: Microsoft.Compute
        virtual_machine_extension_type: CustomScriptExtension
        type_handler_version: '1.9'
        settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
        auto_upgrade_minor_version: true

    - name: Get facts for one Public IP
      azure_rm_publicipaddress_info:
        resource_group: "{{ azure_rg }}"
        name: '{{ vm_name }}-ipv4-pip'
      register: publicipaddresses

    - name: Set Public IP Address Fact
      set_fact: publicipaddress="{{ publicipaddresses | json_query('publicipaddresses[0].ip_address')}}"

    - name: Wait for the WinRM port to come online
      wait_for:
        port: 5986
        host: '{{ publicipaddress }}'
        timeout: 600

    - name: Output Public IP
      debug:
        msg: "The public IP is {{ publicipaddress }}"

    - name: Refresh inventory
      meta: refresh_inventory
